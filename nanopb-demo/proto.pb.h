/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.1 */

#ifndef PB_PROTO_PROTO_PB_H_INCLUDED
#define PB_PROTO_PROTO_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _proto_answer {
    char result[1024];
    int32_t times;
} proto_answer;

typedef struct _proto_question {
    char topic[100];
    char tips[200];
} proto_question;


/* Initializer values for message structs */
#define proto_question_init_default              {"", ""}
#define proto_answer_init_default                {"", 0}
#define proto_question_init_zero                 {"", ""}
#define proto_answer_init_zero                   {"", 0}

/* Field tags (for use in manual encoding/decoding) */
#define proto_answer_result_tag                  1
#define proto_answer_times_tag                   2
#define proto_question_topic_tag                 1
#define proto_question_tips_tag                  2

/* Struct field encoding specification for nanopb */
#define proto_question_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   topic,             1) \
X(a, STATIC,   SINGULAR, STRING,   tips,              2)
#define proto_question_CALLBACK NULL
#define proto_question_DEFAULT NULL

#define proto_answer_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   result,            1) \
X(a, STATIC,   SINGULAR, INT32,    times,             2)
#define proto_answer_CALLBACK NULL
#define proto_answer_DEFAULT NULL

extern const pb_msgdesc_t proto_question_msg;
extern const pb_msgdesc_t proto_answer_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define proto_question_fields &proto_question_msg
#define proto_answer_fields &proto_answer_msg

/* Maximum encoded size of messages (where known) */
#define proto_question_size                      303
#define proto_answer_size                        1037

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
