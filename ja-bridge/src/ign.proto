// version: v0.0.2
// date: 16/04/2020

syntax = "proto3";

package ign;

//-----------------------------------------------

enum EventType {
  // ---Bridge [0~127]---
  // Device heartbeat
  HEARTBEAT          = 0;
  // Event contains activity log
  LOCK_LOG           = 1;
  // Get user account information
  GET_USER_INFO      = 2;
  // Updates server on lock status
  UPDATE_LOCK_STATUS = 3;
  // Adds a lock to bridge's list of connected lock
  ADD_LOCK           = 4; // 新增
  // Request for jobs
  GET_JOBS           = 5; // 更新 从4到5
  // Update a job's status
  UPDATE_JOB         = 6; // 新增
  // ---Server [128~255]---
  // Update user information on bridge
  UPDATE_USER_INFO   = 128;
  // Contains a job
  LOCK_JOB           = 129;
}


message MsgInfo {
    // proto3 已弃用关键词 'required'
    uint32 msg_id = 1; // remove 'required'
    uint32 time = 2; // remove 'required'
    EventType event_type = 3;
    BridgeEventData bridge_data = 4;
    ServerEventData server_data = 5;
}


//-----------------------------------------------

enum OSType {
    Unknow= 0; //新增 proto3 enum first element must be zero
    LINUX = 1;
    RTOS  = 2;
        
}

message BridgeProfile {
    OSType os_info     = 1;
    bytes  bt_id       = 2;
    bytes  mac_addr    = 3;
    bytes  local_ip    = 4;
    bytes  public_ip   = 5;

    // sys_statics:
    //   byte[0] loader
    //   byte[1] cpu_rate
    //   byte[2] mem_rate
    //   byte[3] disk_rate
    bytes  sys_statics = 6;

    bytes  wifi_ssid   = 11;
    int32  wifi_signal = 12;
    uint32 inited_time = 14;
    bytes  name        = 13;
                        
}

message LockLog {
    // Bt id of lock that this log belongs to
    string bt_id = 1;
    // Contains (admin key) encrypted activity logs
    bytes  log_data = 2;
        
}

message BridgeEventData {
    BridgeProfile           profile = 1; //remove required
    // List of lock bt id
    repeated string        bt_ids  = 2;
    // List of activity logs
    repeated LockLog       logs    = 3;
          
}

//-----------------------------------------------

message LockJob {
    // Bt id of lock that this job is for
    string bt_id    = 1;
    // Contains (admin key) encrypted bluetooth commands
    bytes  lock_cmd = 2;
        
}

message LockEntry {
  // Lock bluetooth ID
  string bt_id = 1;
  // 'ekey' (with permissions) used to communicate with lock
  bytes ekey = 2;
}

message ServerEventData {
  // List of lock entries
  repeated LockEntry lockEntries = 1;
  // Job belonging to a lock
  LockJob job = 2;
}

